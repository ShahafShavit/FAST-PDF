name: Build, Zip, and Deploy via FTP

on:
  push:
    branches: [ "publish" ]

jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    # ===================================================================
    # SECTION 1: Build and package all local files first.
    # ===================================================================
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Publish Portable App
      run: dotnet publish --configuration Release --runtime win-x64 --output ./publish -p:PublishSingleFile=true --self-contained true

    - name: DEBUG - List files in publish directory (before removal)
      run: dir /s publish
      shell: cmd

    - name: Remove User-Specific Files
      run: |
        del publish\Data\clients.json
        del publish\Data\personnel.json
        del publish\Data\settings.json
      shell: cmd

    - name: DEBUG - List files in publish directory (after removal)
      run: dir /s publish
      shell: cmd

    - name: Create Zip Archive
      run: Compress-Archive -Path ./publish/* -DestinationPath FAST-PDF_latest.zip
      shell: pwsh

    # ===================================================================
    # SECTION 2: Prepare the version.txt file locally.
    # ===================================================================
    - name: Read .csproj
      id: read_project
      uses: CumulusDS/read-file-action@v1
      with:
        path: './FAST-PDF.csproj'

    # - name: Extract Project Version
    #   id: extract_version
    #   uses: 'regex-match@v2'
    #   with:
    #     text: ${{ steps.read_project.outputs.content }}
    #     regex: '(?<=<AssemblyVersion>).*(?=</AssemblyVersion>)'

    # - name: DEBUG - Echo extracted version
    #   run: echo "Version found: ${{ steps.extract_version.outputs.match }}"
    #   shell: pwsh

    # - name: Create version.txt for deployment
    #   run: echo "${{ steps.extract_version.outputs.match }}" > version.txt
    #   shell: pwsh

    # - name: DEBUG - Show final version.txt content
    #   run: type version.txt
    #   shell: cmd

    # # ===================================================================
    # # SECTION 3: All local operations are done. Deploy to server.
    # # ===================================================================
    # - name: Deploy Application ZIP
    #   uses: SamKirkland/FTP-Deploy-Action@v4.3.4
    #   with:
    #     server: ${{ secrets.REMOTE_HOST }}
    #     username: ${{ secrets.REMOTE_USER }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     local-dir: ./
    #     server-dir: /path/to/your/updates/folder/
    #     include: |
    #       FAST-PDF_latest.zip
    #     log-level: "verbose"

    # - name: Deploy version.txt
    #   uses: SamKirkland/FTP-Deploy-Action@v4.3.4
    #   with:
    #     server: ${{ secrets.REMOTE_HOST }}
    #     username: ${{ secrets.REMOTE_USER }}
    #     password: ${{ secrets.FTP_PASSWORD }}
    #     local-dir: ./
    #     server-dir: /path/to/your/updates/folder/
    #     include: |
    #       version.txt
    #     state-name: ftp-state-version.json
    #     log-level: "verbose"